<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<!-- template for Message list entries -->
	<Button name="Thaliz_CellTemplate" hidden="true" virtual="true">
		<Size>
			<AbsDimension x="620" y="16"/>
		</Size>
		<Layers>
			<Layer>
				<FontString name="$parentMessage" justifyH="LEFT" inherits="GameFontNormal">
					<Size>
						<AbsDimension x="520" y="16"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT">
							<Offset>
								<AbsDimension x="4" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
				<FontString name="$parentGroup" justifyH="LEFT" inherits="GameFontNormal">
					<Size>
						<AbsDimension x="60" y="16"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT">
							<Offset>
								<AbsDimension x="430" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
				<FontString name="$parentParam" justifyH="LEFT" inherits="GameFontNormal">
					<Size>
						<AbsDimension x="120" y="16"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT">
							<Offset>
								<AbsDimension x="490" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Scripts>
			<OnClick>
				PlaySound(882, "Master")
				Thaliz_OnMessageClick(self)
			</OnClick>
			<OnEnter>
				_G[self:GetName().."BG"]:SetVertexColor(1, 1, 1, 1)
			</OnEnter>
			<OnLeave>
				_G[self:GetName().."BG"]:SetVertexColor(0.7, 0.7, 0.7, 0.7)
			</OnLeave>
			<OnLoad>
				self:GetScript("OnLeave")(self)
			</OnLoad>
		</Scripts>
		<NormalTexture name="$parentBG">
			<Color r="0.0" g="0.0" b="0.5" a="0.5"/>
		</NormalTexture>
	</Button>	

	<!-- Main configuration frame -->
	<Frame name="ThalizFrame" parent="UIParent" toplevel="true" hidden="true">
		<Size>
			<AbsDimension x="690" y="516" />
		</Size>
		<Anchors>
			<Anchor point="TOPLEFT">
				<Offset x="312" y="-118" />
			</Anchor>
		</Anchors>
		<Backdrop bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
			<BackgroundInsets>
				<AbsInset left="11" right="12" top="12" bottom="11" />
			</BackgroundInsets>
			<TileSize>
				<AbsValue val="32" />
			</TileSize>
			<EdgeSize>
				<AbsValue val="32" />
			</EdgeSize>
		</Backdrop>
		<Frames>
			<!-- Message list frame -->
			<ScrollFrame name="$parentTableList" inherits="FauxScrollFrameTemplate">
				<Size>
					<AbsDimension x="630" y="330"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="16" y="-24"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Backdrop edgeFile="Interface\Tooltips\UI-Tooltip-Border" tile="true">
					<EdgeSize>
						<AbsValue val="16"/>
					</EdgeSize>
					<TileSize>
						<AbsValue val="16"/>
					</TileSize>
				</Backdrop>
				<Scripts>
					<OnVerticalScroll>
						FauxScrollFrame_OnVerticalScroll(self, offset, 20, Thaliz_UpdateMessageList);
					</OnVerticalScroll>
					<OnShow>
						Thaliz_UpdateMessageList()
					</OnShow>
				</Scripts>
			</ScrollFrame>			
			<!-- 1st line options: Radio buttons for chat destination -->
			<CheckButton name="$parentCheckbuttonRaid" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="16" y="-354"/>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText("Raid/Party Chat")
					</OnLoad>
					<OnClick>
						Thaliz_HandleCheckbox(self);
					</OnClick>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parentCheckbuttonSay" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="144" y="-354"/>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText("Say")
					</OnLoad>
					<OnClick>
						Thaliz_HandleCheckbox(self);
					</OnClick>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parentCheckbuttonYell" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="272" y="-354"/>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText("Yell")
					</OnLoad>
					<OnClick>
						Thaliz_HandleCheckbox(self);
					</OnClick>
				</Scripts>
			</CheckButton>
			<!-- 2nd line options: msg options -->
			<CheckButton name="$parentCheckbuttonIncludeDefault" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="428" y="-354"/>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText("Include Defaults in Filtered macros")
					</OnLoad>
					<OnClick>
						Thaliz_HandleCheckbox(self);
					</OnClick>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parentCheckbuttonPerCharacter" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="16" y="-386"/>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText("Store macro's per Character")
					</OnLoad>
					<OnClick>
						Thaliz_HandleCheckbox(self);
					</OnClick>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parentCheckbuttonWhisper" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="16" y="-418"/>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText("Whisper the Target with:")
					</OnLoad>
					<OnClick>
						Thaliz_HandleCheckbox(self);
					</OnClick>
				</Scripts>
			</CheckButton>
			<!-- Dummy input field to claim frame focus -->
			<EditBox name="$parentDummy" letters="1" visible="false">
				<Size>
					<AbsDimension x="0" y="0"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="-200" y="-200"/>
					</Anchor>
				</Anchors>
				<FontString inherits="GameFontNormal"/>
			</EditBox>
			<!-- Whisper input field -->
			<EditBox name="$parentWhisper" letters="120">
				<Size>
					<AbsDimension x="436" y="20"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="200" y="-420"/>
					</Anchor>
				</Anchors>
				<FontString inherits="GameFontNormal"/>
			</EditBox>
			<!-- OK button -->
			<Button name="CloseButton" inherits="UIPanelButtonTemplate" movable="true" text="OK">
				<Size>
					<AbsDimension x="100" y="23" />
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="245" y="-456" />
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>Thaliz_OKButton_OnClick();</OnClick>
				</Scripts>
			</Button>
			<!-- Close button -->
			<Button name="CloseButton" inherits="UIPanelButtonTemplate" movable="true" text="Close">
				<Size>
					<AbsDimension x="100" y="23" />
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="350" y="-456" />
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>Thaliz_CloseButton_OnClick();</OnClick>
				</Scripts>
			</Button>
		</Frames>
		<Layers>
			<Layer level="ARTWORK">
				<Texture name="$parentHeaderTexture" file="Interface\DialogFrame\UI-DialogBox-Header">
					<Size>
						<AbsDimension x="256" y="64"/>
					</Size>
					<Anchors>
						<Anchor point="TOP">
							<Offset>
								<AbsDimension x="0" y="12"/>
							</Offset>
						</Anchor>
					</Anchors>
				</Texture>
				<FontString inherits="GameFontNormal" text="Thaliz Options">
					<Anchors>
						<Anchor point="TOP" relativeTo="$parentHeaderTexture">
							<Offset>
								<AbsDimension x="0" y="-14"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
				<FontString name="ThalizVersionString" inherits="GameFontNormal" text="Thaliz Classic x - by y">
					<Anchors>
						<Anchor point="TOP" relativeTo="$parentHeaderTexture">
							<Offset>
								<AbsDimension x="0" y="-500"/>
							</Offset>
						</Anchor>
					</Anchors>
					<Color r="0.3" g="0.3" b="0.3" a="1.0"/>
				</FontString>
				<!-- Whisper EditBox border -->
				<Texture name="$parentTextureLeft" file="Interface\ChatFrame\UI-ChatInputBorder-Left">
					<Size>
						<AbsDimension x="32" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT">
							<Offset>
								<AbsDimension x="188" y="-173"/>
							</Offset>
						</Anchor>
					</Anchors>
					<TexCoords left="0" right="0.125" top="0" bottom="1.0"/>
				</Texture>
				<Texture name="$parentTextureRight" file="Interface\ChatFrame\UI-ChatInputBorder-Right">
					<Size>
						<AbsDimension x="32" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="RIGHT">
							<Offset>
								<AbsDimension x="-42" y="-173"/>
							</Offset>
						</Anchor>
					</Anchors>
					<TexCoords left="0.875" right="1" top="0" bottom="1.0" />
				</Texture>
				<Texture name="$parentTextureCenter" file="Interface\ChatFrame\UI-ChatInputBorder-Right">
					<Size>
						<AbsDimension x="1" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT" relativeTo="$parentTextureLeft" relativePoint="RIGHT"/>
						<Anchor point="RIGHT" relativeTo="$parentTextureRight" relativePoint="LEFT"/>
					</Anchors>
					<TexCoords left="0" right="0.9375" top="0" bottom="1.0" />
				</Texture>
			</Layer>
		</Layers>
		<Scripts>
			<OnLoad>
				self:SetMovable(true)
				self:SetUserPlaced(true)
				self:RegisterForDrag("LeftButton")
			</OnLoad>
			<OnDragStart>
				self:StartMoving()
			</OnDragStart>
			<OnDragStop>
				self:StopMovingOrSizing()
			</OnDragStop>
		</Scripts>
	</Frame>

	<!-- Message editor frame -->
	<Frame name="ThalizMsgEditorFrame" parent="UIParent" toplevel="true" hidden="true">
		<Size>
			<AbsDimension x="600" y="250" />
		</Size>
		<Anchors>
			<Anchor point="TOPLEFT">
				<Offset x="0" y="0" />
			</Anchor>
		</Anchors>
		<Backdrop edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
			<BackgroundInsets>
				<AbsInset left="11" right="12" top="12" bottom="11" />
			</BackgroundInsets>
			<TileSize>
				<AbsValue val="32" />
			</TileSize>
			<EdgeSize>
				<AbsValue val="32" />
			</EdgeSize>
		</Backdrop>
		<Frames>
			<!-- Message input field -->
			<EditBox name="$parentMessage" letters="120">
				<Size>
					<AbsDimension x="536" y="20"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="32" y="-32"/>
					</Anchor>
				</Anchors>
				<FontString inherits="GameFontNormal"/>
			</EditBox>
			<!-- Parameter value input field  -->
			<EditBox name="$parentGroupValue" letters="20">
				<Size>
					<AbsDimension x="120" y="20"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="450" y="-123"/>KN
					</Anchor>
				</Anchors>
				<FontString inherits="GameFontNormal"/>
			</EditBox>
			<!-- OK button -->
			<Button name="OkButton" inherits="UIPanelButtonTemplate" text="OK">
				<Size>
					<AbsDimension x="100" y="23" />
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="130" y="-216" />
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>Thaliz_SaveMessageButton_OnClick();</OnClick>
				</Scripts>
			</Button>
			<!-- Cancel button -->
			<Button name="CancelButton" inherits="UIPanelButtonTemplate" text="Cancel">
				<Size>
					<AbsDimension x="100" y="23" />
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="250" y="-216" />
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>Thaliz_CloseMsgEditorButton_OnClick();</OnClick>
				</Scripts>
			</Button>
			<!-- Reset button -->
			<Button name="ResetButton" inherits="UIPanelButtonTemplate" text="Reset">
				<Size>
					<AbsDimension x="100" y="23" />
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="370" y="-216" />
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						_G["ThalizMsgEditorFrameMessage"]:SetText("")
						_G["ThalizMsgEditorFrameGroupValue"]:SetText("")
						_G["ThalizMsgEditorFrameCheckbuttonAlways"]:SetChecked(1)
						_G["ThalizMsgEditorFrameCheckbuttonGuild"]:SetChecked()
						_G["ThalizMsgEditorFrameCheckbuttonCharacter"]:SetChecked()
						_G["ThalizMsgEditorFrameCheckbuttonClass"]:SetChecked()
						_G["ThalizMsgEditorFrameCheckbuttonRace"]:SetChecked()
					</OnClick>
				</Scripts>
			</Button>
			<!-- Options for showing -->
			<CheckButton name="$parentCheckbuttonAlways" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="32" y="-60"/>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText("Default: Use this macro for anyone not matching a rule below")
					</OnLoad>
					<OnClick>
						Thaliz_HandleCheckbox(self);
					</OnClick>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parentCheckbuttonGuild" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="32" y="-90"/>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText("Guild: Use macro where guild name = &lt;?&gt;")
					</OnLoad>
					<OnClick>
						Thaliz_HandleCheckbox(self);
					</OnClick>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parentCheckbuttonCharacter" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="32" y="-120"/>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText("Character: Use macro where character name = &lt;?&gt;")
					</OnLoad>
					<OnClick>
						Thaliz_HandleCheckbox(self);
					</OnClick>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parentCheckbuttonClass" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="32" y="-150"/>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText("Class: Use macro for class = &lt;?&gt;")
					</OnLoad>
					<OnClick>
						Thaliz_HandleCheckbox(self);
					</OnClick>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parentCheckbuttonRace" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="32" y="-180"/>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText("Race: Use macro for race = &lt;?&gt;")
					</OnLoad>
					<OnClick>
						Thaliz_HandleCheckbox(self);
					</OnClick>
				</Scripts>
			</CheckButton>
		</Frames>
		<Layers>
			<Layer level="BORDER">
				<!-- Message EditBox border -->
				<Texture name="$parentTextureLeft" file="Interface\ChatFrame\UI-ChatInputBorder-Left">
					<Size>
						<AbsDimension x="32" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT">
							<Offset>
								<AbsDimension x="20" y="82"/>
							</Offset>
						</Anchor>
					</Anchors>
					<TexCoords left="0" right="0.125" top="0" bottom="1.0" />
				</Texture>
				<Texture name="$parentTextureRight" file="Interface\ChatFrame\UI-ChatInputBorder-Right">
					<Size>
						<AbsDimension x="32" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="RIGHT">
							<Offset>
								<AbsDimension x="-16" y="82"/>
							</Offset>
						</Anchor>
					</Anchors>
					<TexCoords left="0.875" right="1" top="0" bottom="1.0" />
				</Texture>
				<Texture name="$parentTextureCenter" file="Interface\ChatFrame\UI-ChatInputBorder-Right">
					<Size>
						<AbsDimension x="1" y="32" />
					</Size>
					<Anchors>
						<Anchor point="LEFT" relativeTo="$parentTextureLeft" relativePoint="RIGHT" />
						<Anchor point="RIGHT" relativeTo="$parentTextureRight" relativePoint="LEFT" />
					</Anchors>
					<TexCoords left="0" right="0.9375" top="0" bottom="1.0" />
				</Texture>
				<!-- Value EditBox border -->
				<Texture name="$parentValTextureLeft" file="Interface\ChatFrame\UI-ChatInputBorder-Left">
					<Size>
						<AbsDimension x="32" y="32" />
					</Size>
					<Anchors>
						<Anchor point="LEFT">
							<Offset>
								<AbsDimension x="440" y="-8" />
							</Offset>
						</Anchor>
					</Anchors>
					<TexCoords left="0" right="0.125" top="0" bottom="1.0" />
				</Texture>
				<Texture name="$parentValTextureRight" file="Interface\ChatFrame\UI-ChatInputBorder-Right">
					<Size>
						<AbsDimension x="32" y="32" />
					</Size>
					<Anchors>
						<Anchor point="RIGHT">
							<Offset>
								<AbsDimension x="-16" y="-8" />
							</Offset>
						</Anchor>
					</Anchors>
					<TexCoords left="0.875" right="1" top="0" bottom="1.0" />
				</Texture>
				<Texture name="$parentValTextureCenter" file="Interface\ChatFrame\UI-ChatInputBorder-Right">
					<Size>
						<AbsDimension x="1" y="32" />
					</Size>
					<Anchors>
						<Anchor point="LEFT" relativeTo="$parentValTextureLeft" relativePoint="RIGHT" />
						<Anchor point="RIGHT" relativeTo="$parentValTextureRight" relativePoint="LEFT" />
					</Anchors>
					<TexCoords left="0" right="0.9375" top="0" bottom="1.0" />
				</Texture>
			</Layer>
			<Layer level="BACKGROUND">
				<Texture setAllPoints="true">
					<Color r="0.0" g="0.0" b="0.0" a="0.9"/>
				</Texture>
			</Layer>
		</Layers>
		<Scripts>
			<OnLoad>
				self:SetMovable(true)
				self:SetUserPlaced(true)
				self:RegisterForDrag("LeftButton")
			</OnLoad>
			<OnDragStart>
				self:StartMoving()
			</OnDragStart>
			<OnDragStop>
				self:StopMovingOrSizing()
			</OnDragStop>
		</Scripts>
	</Frame>

	<Button name="RezButton" inherits="SecureActionButtonTemplate" parent="UIParent" toplevel="true" hidden="false" frameStrata="LOW" movable="true">
		<Size>
			<AbsDimension x="32" y="32" />
		</Size>
		<Anchors>
			<Anchor point="CENTER">
				<Offset>
					<AbsDimension x="0" y="100" />
				</Offset>
			</Anchor>
		</Anchors>
		<Scripts>
			<OnLoad>
				self:EnableMouse(true);
				self:EnableKeyboard(false);
				self:RegisterForDrag("LeftButton");
				self:RegisterForClicks("LeftButtonUp", "RightButtonUp");

				self:SetScript("PreClick", Thaliz_OnRezClick);

				self.title = self:CreateFontString(nil, "OVERLAY");
				self.title:SetFont("Fonts\\ARIALN.ttf",8)
				self.title:SetTextColor(1, 1, 0)
				self.title:SetAllPoints(self);
				self.title:SetText("");

				self:SetAttribute("type", "spell");
				self:SetAttribute("unit", nil);
				self:SetAttribute("spell", nil);
				self:SetAttribute("item", nil);
				self:SetAttribute("target-slot", nil);
			</OnLoad>
			<OnDragStart>
				if (button == "LeftButton" and IsShiftKeyDown()) then
				self:StartMoving();
				end
			</OnDragStart>
			<OnDragStop>
				self:StopMovingOrSizing();
				Thaliz_RepositionateButton(self);
			</OnDragStop>
		</Scripts>
	</Button>


	<!-- Dummy event frame -->
	<Frame name="ThalizEventFrame">
		<Scripts>
			<OnUpdate>
				if (Thaliz_OnTimer) then
				Thaliz_OnTimer(elapsed);
				end
			</OnUpdate>
		</Scripts>
	</Frame>
</Ui>
